# -*- coding: utf-8 -*-
"""Decision_Tree_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cv2nOyD1hTd7JIMhG2HaZYxIOsduxH8v

Importing Libraries
"""

import pandas as pd
import numpy as np

"""Loading data set"""

dataset = pd.read_csv('play_tennis.csv')
print(dataset.head())

"""Use Label encoding"""

from sklearn.preprocessing import LabelEncoder
# Encode categorical features into numeric
encoder = LabelEncoder()
for col in dataset.columns:
    dataset[col] = encoder.fit_transform(dataset[col])
print(dataset.head())  # Check the encoded data

"""Create a Decision Tree Classifier"""

from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split

# Separate features and target
features = dataset.iloc[:, :-1]  # Features (all columns except the last one)
target = dataset.iloc[:, -1]     # Target (the last column)

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)

# Create and train the Decision Tree Classifier
classifier = DecisionTreeClassifier(criterion='entropy')  # Using 'entropy' for ID3 algorithm
classifier.fit(X_train, y_train)

# Test the classifier
model_accuracy = classifier.score(X_test, y_test)
print(f"Model Accuracy: {model_accuracy * 100:.2f}%")

from sklearn import tree
import matplotlib.pyplot as plt

# Plot the decision tree
plt.figure(figsize=(12,8))
tree.plot_tree(classifier, feature_names=features.columns, class_names=encoder.classes_, filled=True, rounded=True)
plt.show()