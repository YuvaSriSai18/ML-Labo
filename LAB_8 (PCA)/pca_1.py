# -*- coding: utf-8 -*-
"""PCA_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RQsaKiPwU3RdnpeqLchdIPt5da2HiE1_
"""

import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
import pandas as pd

# Load the Iris dataset
iris = load_iris()
df = pd.DataFrame(iris.data, columns=iris.feature_names)
df['species'] = iris.target

# Basic EDA
sns.pairplot(df, hue='species', markers=["o", "s", "D"])
plt.show()

# Display dataset statistics
print(df.describe())

from sklearn.preprocessing import StandardScaler

# Standardize the features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(iris.data)

import numpy as np

# Compute the covariance matrix
cov_matrix = np.cov(X_scaled.T)
print("Covariance matrix:\n", cov_matrix)

# Calculate the eigenvalues and eigenvectors
eigenvalues, eigenvectors = np.linalg.eig(cov_matrix)

# Print eigenvalues and eigenvectors
print("Eigenvalues:\n", eigenvalues)
print("Eigenvectors:\n", eigenvectors)

# Sort eigenvectors by decreasing eigenvalues
sorted_idx = np.argsort(eigenvalues)[::-1]
sorted_eigenvalues = eigenvalues[sorted_idx]
sorted_eigenvectors = eigenvectors[:, sorted_idx]

# Project the data onto the first two principal components
X_pca = X_scaled.dot(sorted_eigenvectors[:, :2])

# Create a DataFrame for visualization
pca_df = pd.DataFrame(X_pca, columns=['PC1', 'PC2'])
pca_df['species'] = iris.target

# Plot the PCA-transformed data
plt.figure(figsize=(8, 6))
sns.scatterplot(x='PC1', y='PC2', hue='species', data=pca_df, palette='bright')
plt.title('PCA of Iris Dataset')
plt.show()